
server:
  port: 8000


eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://127.0.0.1:8761/eureka


spring:
  application:
    name: gateway-service
  cloud:
    gateway:
      globalcors:
        cors-configurations:
          '[/**]':
            allowedMethods:
              - GET
              - POST
              - DELETE
              - PUT
              - OPTION
            allowedOrigins:
              - "http://localhost:3000"
            allowedHeaders: "*"
      default-filters:
        - name: GlobalFilter
          args:
            baseMessage: hello-wold
            preLogger: false
            postLogger: true
      routes:
        - id: user-service
          uri: lb://USER-SERVICE
          predicates:
            - Path= /user/**
          filters:
#            - CustomFilter
#
#        - id: myPage-service
#          uri: lb://MYPAGE-SERVICE
#          predicates:
#            - Path= /myPage/**
#          filters:
##            - CustomFilter
#        - id: party-service
#          uri: lb://PARTY-SERVICE
#          predicates:
#            - Path= /party/**
#          filters:
##            - CustomFilter
#
#        - id: shoplist-server
#          uri: lb://SHOPLIST-SERVICE
#          predicates:
#            - Path= /shoplist/**
#            - Method=GET
#          filters:
##            - CustomFilter
#
#        - id: shopdetail-service
#          uri: lb://SHOPDETAIL-SERVICE
#          predicates:
#              - Path= /shopdetail/**
#              - Method=GET
#          filters:
##              - CustomFilter
##              - AuthFilter
#
#        - id: chat-service
#          uri: lb://CHAT-SERVICE
#          predicates:
#            - Path= /chat/**
#          filters:
##            - CustomFilter
##            - AuthFilter
#
#        - id: review-service
#          uri: lb://REVIEW-SERVICE
#          predicates:
#              - Path= /review/**
#              - Method=POST
#          filters:
#              - CustomFilter
#              - AuthFilter

#        - id: upload-service
#          uri: lb://UPLOAD-SERVICE
#          predicates:
#              - Path= /img/**
#              - Method=GET
#          filters:
#              - CustomFilter
#              - AuthFilter
##                rewirtepath 다시 패스를 지정해준다 ex) upload/img 라고 쏠때 -> 다시 img로 변경해주기위해서 쓴다?
#              - RewritePath=/img/(?<segment>.*),/$\{segment}

management:
  endpoints:
    web:
      exposure:
        include: refresh, health, beans, httptrace